[{"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/index.js":"1","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/App.js":"2","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/reportWebVitals.js":"3","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/components/MenuComponent.js":"4","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/shared/dishes.js":"5","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/components/DishdetailComponent.js":"6","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/components/MainComponent.js":"7","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/components/HeaderComponent.js":"8","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/components/FooterComponent.js":"9","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/components/HomeComponent.js":"10","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/components/ContactComponent.js":"11","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/shared/comments.js":"12","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/shared/leaders.js":"13","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/shared/promotions.js":"14","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/components/AboutComponent.js":"15","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/redux/configureStore.js":"16","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/redux/dishes.js":"17","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/redux/leaders.js":"18","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/redux/comments.js":"19","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/redux/promotions.js":"20","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/redux/ActionTypes.js":"21","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/redux/ActionCreators.js":"22","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/components/LoadingComponent.js":"23","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/redux/forms.js":"24"},{"size":724,"mtime":1610603482159,"results":"25","hashOfConfig":"26"},{"size":560,"mtime":1611034665866,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1610315951010,"results":"28","hashOfConfig":"26"},{"size":2397,"mtime":1611185493350,"results":"29","hashOfConfig":"26"},{"size":1448,"mtime":1610658731370,"results":"30","hashOfConfig":"26"},{"size":7163,"mtime":1611179158152,"results":"31","hashOfConfig":"26"},{"size":2784,"mtime":1611188089501,"results":"32","hashOfConfig":"26"},{"size":5732,"mtime":1610952935650,"results":"33","hashOfConfig":"26"},{"size":2797,"mtime":1610654878669,"results":"34","hashOfConfig":"26"},{"size":1518,"mtime":1611183761068,"results":"35","hashOfConfig":"26"},{"size":10849,"mtime":1611188089501,"results":"36","hashOfConfig":"26"},{"size":4118,"mtime":1610659076783,"results":"37","hashOfConfig":"26"},{"size":2345,"mtime":1610658991569,"results":"38","hashOfConfig":"26"},{"size":447,"mtime":1610660278452,"results":"39","hashOfConfig":"26"},{"size":4273,"mtime":1610781944189,"results":"40","hashOfConfig":"26"},{"size":771,"mtime":1611188089501,"results":"41","hashOfConfig":"26"},{"size":580,"mtime":1611180002556,"results":"42","hashOfConfig":"26"},{"size":177,"mtime":1611107366778,"results":"43","hashOfConfig":"26"},{"size":441,"mtime":1611173269798,"results":"44","hashOfConfig":"26"},{"size":189,"mtime":1611107366779,"results":"45","hashOfConfig":"26"},{"size":175,"mtime":1611179946985,"results":"46","hashOfConfig":"26"},{"size":763,"mtime":1611179933583,"results":"47","hashOfConfig":"26"},{"size":247,"mtime":1611180045135,"results":"48","hashOfConfig":"26"},{"size":161,"mtime":1611188089501,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1odmzj4",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/index.js",[],"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/App.js",[],"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/reportWebVitals.js",[],["101","102"],"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/components/MenuComponent.js",[],"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/shared/dishes.js",[],"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/components/DishdetailComponent.js",["103","104","105","106","107","108"],"import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Button, Breadcrumb, BreadcrumbItem, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label, Row, Col  } from 'reactstrap';\nimport { Control, LocalForm, Errors} from 'react-redux-form';\nimport { Link } from 'react-router-dom';\n\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\n\nclass CommentForm extends Component{\n    constructor (props){\n        super (props);\n\n        this.state = {\n            isModalOpen: false\n        };\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values){\n        this.toggleModal();\n        this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n    render() {\n        return(\n            <div>\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-edit fa-lg\"></span>Submit Comment</Button>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row  className=\"form-group\">\n                                <Label for=\"rating\" md={12}>Rating</Label>\n                                <Col  md={12}>\n                                    <Control.select defaultValue=\"5\" model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\" >\n                                        <option value=\"1\">1</option>\n                                        <option value=\"2\">2</option>\n                                        <option value=\"3\">3</option>\n                                        <option value=\"4\">4</option>\n                                        <option value=\"5\">5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"author\"  md={12}>Your Name</Label>\n                                <Col  md={12}>\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Author\" className=\"form-control\" validators={{ required, minLength: minLength(3), maxLength: maxLength(15) }} />\n                                    <Errors className=\"text-danger\" model=\".author\" show=\"touched\" messages={{ required: 'Required: ', minLength: 'Must be greater than 3 characters', maxLength: 'Must be 15 charaters or less' }} />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\"  md={12}>Your feedback</Label>\n                                <Col  md={12}>\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" resize=\"none\" rows=\"6\" className=\"form-control\" validators={{ required }} />\n                                    <Errors className=\"text-danger\" model=\".comment\" show=\"touched\" messages={{ required: 'Required' }} />\n                                </Col>\n                            </Row>\n\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n\n            </div>\n        )\n    }\n}\n\n    function RenderDish({dish}) {\n        return (\n            <div className='col-12 col-md-5 m-1'>\n                <Card>\n                    <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\n                    <CardBody>\n                        <CardTitle>{dish.name}</CardTitle>\n                        <CardText>{dish.description}</CardText>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n\n    function RenderComments({comments, addComment, dishId}) {\n        if(comments != null)        \n            return (\n                <div className='col-12 col-md-5 m-1'>\n                    <h4> Comments </h4>\n                    <ul className='list-unstyled'>\n                        {comments.map((comment) => {\n                            return (\n                                <li key={comment.id}>\n                                    <p>{comment.comment}</p>\n                                    <p>-- {comment.author},\n                                    &nbsp;\n                                    {new Intl.DateTimeFormat('en-US', {\n                                        year: 'numeric',\n                                        month: 'long',\n                                        day: '2-digit'\n                                        }).format(new Date(comment.date))}\n                                    </p>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                    <CommentForm dishId={dishId} addComment={addComment} />\n                </div>\n            );\n    }\n\n    const DishDetail = (props) =>{\n        if (props.dish == null) {\n            return (<div></div>);\n        }\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to=\"/menu\">Menu</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active>\n                                {props.dish.name}\n                        </BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                        <hr />\n                    </div>\n                </div>\n                    <div className=\"row\">\n                        <RenderDish dish = {props.dish} />\n                        <RenderComments comments = {props.comments}\n                            addComment={props.addComment}\n                            dishId={props.dish.id} />\n                    </div>\n                    \n                    \n            </div>   \n        );\n    }\n\nexport default DishDetail;","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/components/MainComponent.js",["109","110","111"],"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/components/HeaderComponent.js",[],"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/components/FooterComponent.js",[],"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/components/HomeComponent.js",[],"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/components/ContactComponent.js",["112","113","114","115","116","117","118","119"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors, actions } from 'react-redux-form';\n\n// Check validation of form\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\nclass Contact extends Component{\n\n    constructor(props){\n        super(props);\n        // required component\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values){\n        console.log(\"Current State is: \" + JSON.stringify(values));\n        alert(\"Current State is: \" + JSON.stringify(values));\n        this.props.resetFeedbackForm();\n    }\n\n    render(){\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to=\"/home\">Home</Link>\n                            </BreadcrumbItem>\n                            <BreadcrumbItem active>\n                                    Contact Us\n                            </BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>Contact Us</h3>\n                            <hr />\n                        </div>\n                    </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon <br />\n                            Hong Kong<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us Your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }} />\n                                        <Errors \n                                            className=\"text-danger\"\n                                            model=\".firstname\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required: ',\n                                                minLength: 'Must be greater than 2 characters',\n                                                maxLength: 'Must be 15 characters or less'\n                                            }}\n                                        />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\" \n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }} />\n                                        <Errors \n                                            className=\"text-danger\"\n                                            model=\".lastname\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required: ',\n                                                minLength: 'Must be greater than 2 characters',\n                                                maxLength: 'Must be 15 characters or less'\n                                            }}\n                                        />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }} />\n                                        <Errors \n                                            className=\"text-danger\"\n                                            model=\".telnum\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required: ',\n                                                minLength: 'Must be greater than 2 numbers',\n                                                maxLength: 'Must be 15 numbers or less',\n                                                isNumber: 'Must be a number'\n                                            }}\n                                        />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\" \n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }} />\n                                        <Errors \n                                            className=\"text-danger\"\n                                            model=\".email\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required: ',\n                                                validEmail: 'Invalid Email Address'\n                                            }}\n                                        />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                            className=\"form-check-input\" /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" \n                                    name=\"contactType\" \n                                    className=\"form-control\" >\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\" \n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/shared/comments.js",[],"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/shared/leaders.js",[],"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/shared/promotions.js",[],"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/components/AboutComponent.js",[],"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/redux/configureStore.js",[],"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/redux/dishes.js",[],"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/redux/leaders.js",[],"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/redux/comments.js",[],"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/redux/promotions.js",[],"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/redux/ActionTypes.js",[],"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/redux/ActionCreators.js",[],"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/components/LoadingComponent.js",[],"/Users/dz/Desktop/MSCourses/Coursera/Full Stack Web Development with React /Exercise/Bootstrap4/conFusion/React/confusion/src/redux/forms.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":2,"column":123,"nodeType":"126","messageId":"127","endLine":2,"endColumn":127},{"ruleId":"124","severity":1,"message":"128","line":2,"column":129,"nodeType":"126","messageId":"127","endLine":2,"endColumn":138},{"ruleId":"124","severity":1,"message":"129","line":2,"column":140,"nodeType":"126","messageId":"127","endLine":2,"endColumn":145},{"ruleId":"130","severity":1,"message":"131","line":46,"column":37,"nodeType":"132","endLine":46,"endColumn":138},{"ruleId":"130","severity":1,"message":"133","line":58,"column":37,"nodeType":"132","endLine":58,"endColumn":218},{"ruleId":"130","severity":1,"message":"134","line":66,"column":37,"nodeType":"132","endLine":66,"endColumn":176},{"ruleId":"124","severity":1,"message":"135","line":1,"column":10,"nodeType":"126","messageId":"127","endLine":1,"endColumn":16},{"ruleId":"124","severity":1,"message":"136","line":1,"column":18,"nodeType":"126","messageId":"127","endLine":1,"endColumn":29},{"ruleId":"137","severity":1,"message":"138","line":33,"column":3,"nodeType":"139","messageId":"140","endLine":35,"endColumn":4},{"ruleId":"141","severity":1,"message":"142","line":65,"column":29,"nodeType":"132","endLine":65,"endColumn":71},{"ruleId":"130","severity":1,"message":"133","line":79,"column":37,"nodeType":"132","endLine":84,"endColumn":46},{"ruleId":"130","severity":1,"message":"133","line":100,"column":37,"nodeType":"132","endLine":105,"endColumn":46},{"ruleId":"130","severity":1,"message":"133","line":121,"column":37,"nodeType":"132","endLine":126,"endColumn":46},{"ruleId":"130","severity":1,"message":"133","line":143,"column":37,"nodeType":"132","endLine":148,"endColumn":46},{"ruleId":"130","severity":1,"message":"143","line":164,"column":45,"nodeType":"132","endLine":165,"endColumn":76},{"ruleId":"130","severity":1,"message":"131","line":171,"column":37,"nodeType":"132","endLine":173,"endColumn":63},{"ruleId":"130","severity":1,"message":"134","line":182,"column":37,"nodeType":"132","endLine":184,"endColumn":68},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'FormGroup' is defined but never used.","'Input' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'Navbar' is defined but never used.","'NavbarBrand' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]